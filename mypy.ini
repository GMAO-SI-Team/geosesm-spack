[mypy]
python_version = 3.7
files = ['lib/spack/llnl/**/*.py', 'lib/spack/spack/**/*.py', './var/spack/repos/builtin/packages/*/package.py']
mypy_path = ['bin', 'lib/spack', 'lib/spack/external', 'var/spack/repos/builtin']
allow_redefinition = true

# This and a generated import file allows supporting packages
namespace_packages = true

# To avoid re-factoring all the externals, ignore errors and missing imports
# globally, then turn back on in spack and spack submodules
ignore_errors = true
ignore_missing_imports = true

  [[mypy.overrides]]
  module = 'spack.*'
  ignore_errors = false
  ignore_missing_imports = false

  [[mypy.overrides]]
  module = 'packages.*'
  ignore_errors = false
  ignore_missing_imports = false
  # we can't do this here, not a module scope option, in spack style instead
  # disable_error_code = 'no-redef'

  [[mypy.overrides]]
  module = 'llnl.*'
  ignore_errors = false
  ignore_missing_imports = false

  [[mypy.overrides]]
  module = 'spack.test.packages'
  ignore_errors = true

  # ignore errors in fake import path for packages
  [[mypy.overrides]]
  module = 'spack.pkg.*'
  ignore_errors = true
  ignore_missing_imports = true

  # Spack imports a number of external packages, and they *may* require Python 3.8 or
  # higher in recent versions. This can cause mypy to fail because we check for 3.7
  # compatibility. We could restrict mypy to run for the oldest supported version (3.7),
  # but that means most developers won't be able to run mypy, which means it'll fail
  # more in CI. Instead, we exclude these imported packages from mypy checking.
  [[mypy.overrides]]
  module = [
      'IPython',
      'altgraph',
      'attr',
      'boto3',
      'botocore',
      'distro',
      'importlib.metadata',
      'jinja2',
      'jsonschema',
      'macholib',
      'markupsafe',
      'numpy',
      'pkg_resources',
      'pyristent',
      'pytest',
      'ruamel.yaml',
      'six',
  ]
  follow_imports = 'skip'
  follow_imports_for_stubs = true
